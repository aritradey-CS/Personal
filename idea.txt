That's a great idea! Building a movie recommendation system based on similarities between movies is an interesting and challenging project. To develop this project, you will need the following knowledge:

1. React.js: Since you already have a basic knowledge of HTML, CSS, and JavaScript, you can use React.js to build the user interface of your movie recommendation website. React.js is a popular JavaScript library for building user interfaces and will help you create interactive and dynamic components.

2. API Integration: You will need to integrate with a movie database API, such as the IMDb API or The Movie Database (TMDb) API, to fetch movie data. These APIs provide extensive movie information, including titles, genres, ratings, and more. You can use this data to retrieve movie details, search for movies, and get recommendations based on user input.

3. Data Mining and Analysis: To determine the similarities between movies and provide accurate recommendations, you will need to use data mining and analysis techniques. This involves processing and analyzing movie data to identify patterns and relationships. Common techniques include content-based filtering, collaborative filtering, and machine learning algorithms.

4. Similarity Algorithms: You'll need to implement similarity algorithms to calculate the similarity between movies based on different attributes such as genres, actors, directors, and user ratings. Some popular similarity algorithms used in recommendation systems include cosine similarity, Jaccard similarity, and Pearson correlation coefficient.

5. Front-end Design and UI/UX: Creating an appealing and user-friendly design is important to provide an enjoyable user experience. You'll need to consider the layout, navigation, search functionality, and how the recommendations are presented to the users. Knowledge of front-end design principles, CSS frameworks (such as Bootstrap or Material-UI), and UI/UX best practices will be beneficial.

6. State Management: As your application grows, managing application state becomes crucial. You can use state management libraries like Redux or React Context API to handle the state of your application, especially when dealing with user interactions, search results, and recommendations.

Remember, building a movie recommendation system involves both front-end and back-end development. While the focus of this discussion is on the front-end using React.js, you will also need to develop a back-end system to handle API requests and perform the data mining and analysis. Popular back-end frameworks like Node.js or Django can be used for this purpose.

I hope this information helps you get started on your movie recommendation system project. Enjoy building it!